<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="acquireIncrement" value="5"></property>
		<property name="acquireRetryAttempts" value="30"></property>
		<property name="idleConnectionTestPeriod" value="300"></property>
		<property name="initialPoolSize" value="20"></property>
		<property name="maxIdleTime" value="300"></property>
		<property name="maxPoolSize" value="100"></property>
		<property name="maxStatements" value="50"></property>
		<property name="minPoolSize" value="10"></property>
	</bean>

	<!-- ========================= HIBERNATE ========================= -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- <property name="mappingLocations">
			<list>
				<value>classpath:/hibernate/*.hbm.xml</value>
			</list>
		</property> -->
		<property name="annotatedClasses">
			<list>
				<value>com.yoda.feedback.model.Feedback</value>
				<value>com.yoda.brand.model.Brand</value>
				<value>com.yoda.item.model.Item</value>
				<value>com.yoda.content.model.Comment</value>
				<value>com.yoda.site.model.Site</value>
				<value>com.yoda.homepage.model.HomePage</value>
				<value>com.yoda.content.model.Content</value>
				<value>com.yoda.content.model.ContentBrand</value>
				<value>com.yoda.section.model.Section</value>
				<value>com.yoda.user.model.UserAuthority</value>
				<value>com.yoda.contactus.model.ContactUs</value>
				<value>com.yoda.content.model.ContentImage</value>
				<value>com.yoda.kernal.model.Release</value>
				<value>com.yoda.menu.model.Menu</value>
				<value>com.yoda.user.model.User</value>
				<value>com.yoda.country.model.Country</value>
				<value>com.yoda.poll.model.PollDetail</value>
				<value>com.yoda.poll.model.PollHeader</value>
				<value>com.yoda.template.model.Template</value>
				<value>com.yoda.state.model.State</value>
				<value>com.yoda.category.model.Category</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
			</props>
		</property>
		<!-- 
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
				</entry>
			</map>
		</property>
		-->
	</bean>

	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
</beans>