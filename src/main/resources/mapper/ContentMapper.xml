<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.taklip.yoda.mapper.ContentMapper">
    <cache />

    <resultMap id="contentResult" type="Content">
        <id property="id" column="id" />
        <result property="siteId" column="site_id" />
        <result property="naturalKey" column="natural_key" />
        <result property="title" column="title" />
        <result property="createTime" column="create_time" />
        <result property="updateTime" column="update_time" />
        <result property="publishDate" column="publish_date" />
        <result property="expireDate" column="expire_date" />
        <result property="shortDescription" column="short_description" />
        <result property="description" column="description" />
        <result property="pageTitle" column="page_title" />
        <result property="hitCounter" column="hit_counter" />
        <result property="published" column="published" />
        <result property="featureData" column="feature_data" />
        <result property="featuredImage" column="featured_image" />
        <result property="score" column="score" />
        <result property="deleted" column="deleted" />
        <result property="createBy" column="create_by" />
        <result property="updateBy" column="update_by" />
        <result property="categoryId" column="category_id" />
        <!-- <association property="category" javaType="Category">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name" />
            <result property="parent" column="category_parent" />
        </association> -->
        <!-- <association property="createBy" column="id" javaType="User" resultMap="userResult" columnPrefix="c_" />
        <association property="updateBy" column="id" javaType="User" resultMap="userResult" columnPrefix="u_" /> -->
        <!-- <collection property="contentContributors" ofType="ContentContributor">
            <id property="id" column="content_contributor_id" />
            <result property="contentId" column="content_contributor_content_id" />
            <result property="userId" column="content_contributor_user_id" />
            <result property="username" column="content_contributor_username" />
            <result property="profilePhotoSmall" column="content_contributor_profile_photo_small" />
        </collection>
        <collection property="contentBrands" ofType="ContentBrand">
            <id property="id" column="content_brand_id" />
            <result property="contentId" column="content_brand_content_id" />
            <result property="brandId" column="content_brand_brand_id" />
            <result property="description" column="content_brand_description" />
            <result property="brandName" column="content_brand_brand_name" />
            <result property="brandLogo" column="content_brand_brand_logo" />
        </collection> -->
    </resultMap>

    <!-- <resultMap id="userResult" type="User">
        <id property="id" column="id" />
        <result property="username" column="username" />
        <result property="profilePhotoSmall" column="profile_photo_small" />
    </resultMap> -->

    <sql id="contentColumns">
        c.id,
        c.category_id,
        c.site_id,
        c.natural_key,
        c.title,
        c.create_time,
        c.update_time,
        c.publish_date,
        c.expire_date,
        c.short_description,
        c.description,
        c.page_title,
        c.hit_counter,
        c.published,
        c.feature_data,
        c.featured_image,
        c.score,
        c.deleted,
        c.create_by,
        c.update_by,
        cc.id as content_contributor_id,
        cc.content_id as content_contributor_content_id,
        cc.user_id as content_contributor_user_id,
        cc.username as content_contributor_username,
        cc.profile_photo_small as content_contributor_profile_photo_small,
        cb.id as content_brand_id,
        cb.content_id AS content_brand_content_id,
        cb.brand_id AS content_brand_brand_id,
        cb.description AS content_brand_description,
        cb.brand_name AS content_brand_brand_name,
        cb.brand_logo AS content_brand_brand_logo,
        ca.id AS category_id,
        ca.name AS category_name,
        ca.parent AS category_parent
        <!-- u.id AS c_id,
        u.username AS c_username,
        u.profile_photo_small AS c_profile_photo_small,
        uu.id AS u_id,
        uu.username AS u_username,
        uu.profile_photo_small AS u_profile_photo_small -->
    </sql>

    <sql id="contentJoins">
        LEFT OUTER JOIN content_brand cb ON c.id = cb.content_id
        LEFT OUTER JOIN content_contributor cc ON c.id = cc.content_id
        LEFT OUTER JOIN category ca on c.category_id = ca.id
        <!-- LEFT OUTER JOIN user u on c.create_by = u.id
        LEFT OUTER JOIN user uu on c.update_by = uu.id -->
    </sql>

    <select id="getContentByIds" resultMap="contentResult">
        SELECT 
            <include refid="contentColumns"/>
        FROM content c
        <include refid="contentJoins"/>
        WHERE c.deleted = 0 and c.id in (#{ids})
    </select>

    <select id="getContentById" resultMap="contentResult">
        SELECT 
            <include refid="contentColumns"/>
        FROM content c
        <include refid="contentJoins"/>
        WHERE c.deleted = 0 and c.id = #{id}
    </select>

    <select id="getContents" resultMap="contentResult">
        SELECT
            c.id,
            c.site_id,
            c.natural_key,
            c.title,
            c.create_time,
            c.update_time,
            c.publish_date,
            c.expire_date,
            c.short_description,
            c.description,
            c.page_title,
            c.hit_counter,
            c.published,
            c.feature_data,
            c.featured_image,
            c.score,
            ca.id AS category_id,
            ca.name AS category_name,
            ca.parent AS category_parent
        FROM content c
        LEFT OUTER JOIN category ca on c.category_id = ca.id
        WHERE c.deleted = 0
        ORDER BY c.update_time DESC
    </select>

    <select id="getContentsByTitle" resultType="Content">
        SELECT 
            <include refid="contentColumns"/>
        FROM content c
        <include refid="contentJoins"/>
        WHERE c.deleted = 0 and c.title like CONCAT('%', #{title}, '%')
    </select>

    <select id="getContentsByUserId" resultMap="contentResult">
        SELECT 
            <include refid="contentColumns"/>
        FROM content c
        <include refid="contentJoins"/>
        WHERE c.deleted = 0 and c.create_by = #{userId}
    </select>

    <select id="getContentsByFeatureData" resultMap="contentResult">
        SELECT
            c.id,
            c.site_id,
            c.natural_key,
            c.title,
            c.create_time AS createTime,
            c.update_time AS updateTime,
            c.publish_date,
            c.expire_date,
            c.short_description,
            c.description,
            c.page_title,
            c.hit_counter,
            c.published,
            c.feature_data,
            c.featured_image,
            c.score
        FROM content c
        WHERE c.deleted = 0 and c.feature_data = #{featureData}
        AND c.published = true
        ORDER BY c.update_time DESC
    </select>

    <select id="search" resultType="Content">
        SELECT 
            <include refid="contentColumns"/>
        FROM content c
        <include refid="contentJoins"/>
        <where>
            c.deleted = 0 and c.site_id  = #{param1}
        </where>
        order by c.id
    </select>
</mapper>