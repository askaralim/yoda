<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.taklip.yoda.mapper.SolutionMapper">
	<cache />

	<resultMap id="solutionResult" type="Solution">
		<id property="id" column="id" />
		<result property="title" column="title" />
		<result property="description" column="description" />
		<result property="imagePath" column="image_path" />
		<result property="categoryId" column="category_id" />
		<result property="createDate" column="create_date" />
		<result property="updateDate" column="update_date" />
		<association property="createBy" column="id" javaType="User" resultMap="userResult" />
		<association property="updateBy" column="id" javaType="User" resultMap="userResult" columnPrefix="u_" />
		<collection property="solutionItems" ofType="SolutionItem">
			<id property="id" column="solution_item_id" />
			<result property="solutionId" column="solution_item_solution_id" />
			<result property="itemId" column="solution_item_item_id" />
			<result property="description" column="solution_item_description" />
		</collection>
	</resultMap>

	<resultMap id="userResult" type="User">
		<id property="id" column="id" />
		<result property="username" column="username" />
	</resultMap>

	<sql id="solutionColumns">
		s.id,
		s.title,
		s.description,
		s.image_path AS imagePath,
		s.category_id AS categoryId,
		s.create_date AS createDate,
		s.update_date AS updateDate,
		si.id as solution_item_id,
		si.solution_id AS solution_item_solution_id,
		si.item_id AS solution_item_item_id,
		si.description AS solution_item_description,
		u.id,
		u.username,
		uu.id AS u_id,
		uu.username AS u_username
	</sql>

	<select id="count" resultType="java.lang.Integer">
		SELECT count(*) from solution
	</select>

	<select id="getById" resultMap="solutionResult">
		SELECT 
			<include refid="solutionColumns"/>
		FROM solution s
		LEFT OUTER JOIN solution_item si on si.solution_id = s.id
		LEFT OUTER JOIN user_ u on s.create_by = u.id
		LEFT OUTER JOIN user_ uu on s.update_by = uu.id
		WHERE s.id = #{id}
	</select>

	<select id="getSolutions" resultType="Solution">
		SELECT 
			<include refid="solutionColumns"/>
		FROM solution s
		LEFT OUTER JOIN solution_item si on si.solution_id = s.id
		LEFT OUTER JOIN user_ u on s.create_by = u.id
		LEFT OUTER JOIN user_ uu on s.update_by = uu.id
		ORDER BY s.id DESC
	</select>

	<insert id="insert" parameterType="Solution" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO solution(id, title, description, image_path, create_by, create_date, update_by, update_date)
		VALUES(#{id}, #{title}, #{description}, #{imagePath}, #{createBy.id}, #{createDate}, #{updateBy.id}, #{updateDate})
	</insert>

	<update id="update" parameterType="Solution">
		UPDATE solution SET
			title = #{title},
			description = #{description},
			image_path = #{imagePath},
			update_by = #{updateBy.id},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>

	<delete id="delete">
		DELETE FROM solution WHERE id = #{id}
	</delete>
</mapper>